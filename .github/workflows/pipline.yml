name: Pipeline backend

on:
    push:
        branches: [master, main, develop]
           

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: install dependencies
              run: npm i

            - name: Unit Test
              run: npm run test

    build-and-push:
        runs-on: ubuntu-latest
        needs: test
        env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        steps:    
            - uses: act10ns/slack@v2
              with:
                status: starting
                channel: '#workflows'
                message: Starting Docker Build and Push...
              if: always()

            - name: checkout
              uses: actions/checkout@v4

            - name: build docker image
              run: docker build -t talel12/back-session7 .
            
            
            - name: login to dockerhub
              uses: docker/login-action@v3
              with:
                    username: ${{ vars.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: push image docker 
              run: docker push talel12/back-session7:latest

            - name: tag image With version number
              run: docker tag talel12/back-session7 talel12/back-session7:${{ github.run_number }}

            - name: push image with version number
              run: docker push talel12/back-session7:${{ github.run_number }}

    deployment:
        runs-on: ubuntu-latest
        needs: build-and-push
        steps:
              - name: connect via ssh and execute commands
                uses: appleboy/ssh-action@v1
                with:
                    host: ${{ secrets.HOST }}
                    username: user
                    password: ${{ secrets.PASSWORD }}
                    script: |
                        cd /home/user/devops-session7/back
                        sudo git pull
                        sudo docker compose pull
                        sudo docker compose up -d --force-recreate --remove-orphans

              - uses: act10ns/slack@v2
                with:
                    status: ${{ job.status }}
                    steps: ${{ toJson(steps) }}
                    channel: '#workflows'
                if: always()